//const Geo = require("geo");

const readArgument = (interaction, name, type) => {
	let val;
	switch (type) {
		case "string":
			val = interaction.options.getString(name);
			break;
		case "number":
			val = interaction.options.getNumber(name);
			break;
		case "integer":
			val = interaction.options.getInteger(name);
			break;
		case "user":
			val = interaction.options.getUser(name);
			break;
/*		case "city":
			let city = interaction.options.getString(name);
			if (city === null) break;

			let geo = await Geo.getCoord(city);
			if (geo) {
				val = geo;
			}
			break;
*/		default:
			// Unknown type
			break;
	}
	return val;
}

module.exports = (interaction, actualArgs, args) => {
	for (argument of args) {
		let val = readArgument(interaction, argument.name, argument.type);
		if (val === undefined) {
			// Supplied argument is invalid
			return false;
		}
		
		if (val === null) {
			// No argument supplied
			if (!argument.optional) return false;
		} else {
			actualArgs[argument.name] = val;
		}
	}

	return true;
}
